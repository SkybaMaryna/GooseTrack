{"version":3,"file":"static/js/2.5bce13ef.chunk.js","mappings":"sUAGaA,EAAYC,EAAAA,GAAAA,IAAH,4HAQTC,EAAUD,EAAAA,GAAAA,IAAH,iJAUPE,EAAKF,EAAAA,GAAAA,GAAH,yMAIJG,EAAAA,IAKEC,EAAaJ,EAAAA,GAAAA,KAAH,sGAIZG,EAAAA,IAGEE,EAAQL,EAAAA,GAAAA,IAAH,gFAMLM,EAASN,EAAAA,GAAAA,KAAH,mDAINO,EAAMP,EAAAA,GAAAA,KAAH,mKAiBHQ,GANgBR,EAAAA,GAAAA,IAAH,yGAMHA,EAAAA,GAAAA,IAAH,gUAIV,qBAAGS,UAA6B,IAAM,OAAtC,IAKG,qBAAGA,UAA6B,EAAI,CAApC,IACG,qBAAGA,UAA6B,UAAY,QAA5C,K,6BCxEHC,GAASV,EAAAA,GAAAA,OAAH,mIAQNO,GAAMP,EAAAA,GAAAA,IAAH,6H,gCCsBhB,GAzBqB,WACnB,IAAMW,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GACpBC,GAAWC,EAAAA,EAAAA,MACXC,EAAOC,SAASC,eAAe,QACrCF,EAAKG,UAAUC,IAAf,UAAsBT,EAAtB,UAQA,OACE,UAACD,GAAD,CAAQW,QAPU,WAClBP,GAASQ,EAAAA,EAAAA,MACT,IAAMC,EAAeP,EAAKQ,UAC1BR,EAAKQ,UAA6B,eAAjBD,EAAgC,YAAc,YAChE,EAGC,UACE,UAAC,GAAD,UACa,UAAVZ,GACC,UAAC,OAAD,CAAQc,KAAM,GAAIC,MAAM,aAExB,UAAC,OAAD,CAAOD,KAAM,GAAIC,MAAM,eAKhC,E,sBC1BYC,GAAO3B,EAAAA,GAAAA,KAAH,wNAMN4B,EAAAA,IAMEC,GAAS7B,EAAAA,GAAAA,IAAH,2VAOG8B,EAAAA,IAUTC,GAAe/B,EAAAA,GAAAA,KAAH,4YAiBZgC,GAAYhC,EAAAA,GAAAA,IAAH,gFAMTiC,IAAOjC,EAAAA,EAAAA,IAAOkC,GAAAA,GAAPlC,CAAH,4FC5BjB,GAxBiB,WACf,IAAMmC,GAAWvB,EAAAA,EAAAA,IAAYwB,GAAAA,IACvBC,GAAYzB,EAAAA,EAAAA,IAAY0B,GAAAA,IAExBC,GAAe,OAARJ,QAAQ,IAARA,OAAA,EAAAA,EAAUI,OAAQ,OACzBC,EAAM,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAUM,WACnBC,EAAcH,EAAKI,OAAOC,MAAM,EAAG,GAAGC,cAE5C,OACE,WAACZ,GAAD,CAAMa,GAAG,gBAAT,WACE,UAACnB,GAAD,UAAOY,KACP,UAACV,GAAD,UACGQ,GACC,UAACN,GAAD,UAAeW,IACZF,GAGH,UAACR,GAAD,CAAWe,IAAKP,EAAQQ,IAAI,YAF5B,UAACjB,GAAD,UAAeW,QAOxB,ECtBYO,GAAmBjD,EAAAA,GAAAA,GAAH,iFAMhBkD,GAAclD,EAAAA,GAAAA,GAAH,8EAMXmD,IAAgBnD,EAAAA,EAAAA,IAAOkC,GAAAA,GAAPlC,CAAH,qdAUfoD,EAAAA,GAGaC,EAAAA,GACXC,EAAAA,GAEEA,EAAAA,GAIFA,EAAAA,GACWD,EAAAA,IAQXE,GAAcvD,EAAAA,GAAAA,IAAH,8EAMXwD,GAAoBxD,EAAAA,GAAAA,EAAH,gEAKjByD,GAAWzD,EAAAA,GAAAA,GAAH,2G,sBC3Cf0D,IAAO,IAAIC,MAAOC,cAAcC,MAAM,KAAK,GA2BjD,GA1BgB,WACd,IAAM/C,GAAWC,EAAAA,EAAAA,MACX+C,EAAkB,kBAAMhD,GAASiD,EAAAA,GAAAA,MAAf,EACxB,OACE,WAACd,GAAD,YACE,UAACQ,GAAD,0BACA,UAACP,GAAD,WACE,UAACC,GAAD,CAAeL,GAAG,UAAUzB,QAASyC,EAArC,UACE,WAACP,GAAD,YACE,UAAC,OAAD,KACA,UAACC,GAAD,iCAIN,UAACN,GAAD,WACE,UAACC,GAAD,CAAeL,GAAE,+BAA0BY,IAAQrC,QAASyC,EAA5D,UACE,WAACP,GAAD,YACE,UAAC,OAAD,KACA,UAACC,GAAD,gCAMX,ECpCY9C,GAASV,EAAAA,GAAAA,OAAH,gcAoBNgE,GAAahE,EAAAA,GAAAA,KAAH,kHCDvB,GAhBqB,WACnB,IAAMc,GAAWC,EAAAA,EAAAA,MAKjB,OACE,WAAC,GAAD,CAAQM,QAJW,WACnBP,GAASmD,EAAAA,EAAAA,MACV,EAEC,qBAEE,UAACD,GAAD,WACE,UAAC,OAAD,QAIP,ECfYE,GAAgBlE,EAAAA,GAAAA,IAAH,gmBAQJmE,EAAAA,IAmBTC,GAAgBpE,EAAAA,GAAAA,IAAH,6PAcbqE,GAAWrE,EAAAA,GAAAA,GAAH,8dAqBRsE,GAActE,EAAAA,GAAAA,IAAH,ySAgBXuE,IAAgBvE,EAAAA,EAAAA,IAAOkC,GAAAA,GAAPlC,CAAH,sFAMbwE,GAAaxE,EAAAA,GAAAA,KAAH,4CCHvB,GArEgB,WACd,IAAMW,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GAC1B,GAAoD4D,EAAAA,EAAAA,KAA5CC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAAUC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,SACjC/D,GAAWC,EAAAA,EAAAA,MACX+C,EAAkB,kBAAMhD,GAASiD,EAAAA,GAAAA,MAAf,EAExB,OACE,WAACG,GAAD,YACE,6BACE,WAACE,GAAD,YACE,WAACG,GAAD,CAAezB,GAAG,IAAlB,UACG4B,IACC,UAACJ,GAAD,CACEvB,IAEM+B,EADJD,EACY,KACA,MAEd7B,IAAI,OACJ+B,MAAM,QAGTJ,IACC,UAACL,GAAD,CACEvB,IAEM+B,EADJD,EACY,KACA,MAEd7B,IAAI,OACJ+B,MAAM,QAEP,IACFH,IACC,UAACN,GAAD,CACEvB,IAEM+B,EADJD,EACY,KACA,MAEd7B,IAAI,OACJ+B,MAAM,SAGV,WAACV,GAAD,gBACG,+BADH,iBAIAO,IACW,UAAVjE,GACC,UAAC6D,GAAD,CAAYnD,QAASyC,EAArB,SACGY,GAAW,UAAC,OAAD,CAASjD,KAAM,MAAS,UAAC,OAAD,CAASA,KAAM,QAGrD,UAAC+C,GAAD,CAAYnD,QAASyC,EAArB,SACGY,GACC,UAAC,OAAD,CAASjD,KAAM,GAAIC,MAAM,aAEzB,UAAC,OAAD,CAASD,KAAM,GAAIC,MAAM,mBAKnC,UAAC,GAAD,QAEF,UAAC,GAAD,MAGL,E,sBCgCD,GA9Fe,WACb,IAAMZ,GAAWC,EAAAA,EAAAA,MAEXiE,GADWC,EAAAA,EAAAA,MACqBC,SAASC,SAAS,YAClDC,GAAYxE,EAAAA,EAAAA,IAAYyE,EAAAA,GACxB1E,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,GAC1B,GAA0C4D,EAAAA,EAAAA,KAAlCC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,UAEZU,GAFN,EAA6BT,SAEN,kBAAM/D,GAASyE,EAAAA,GAAAA,MAAf,GAEjBC,GAAe5E,EAAAA,EAAAA,IAAY6E,GAAAA,IAYjC,OANID,EACFvE,SAASD,KAAKG,UAAUC,IAAI,eAE5BH,SAASD,KAAKG,UAAUuE,OAAO,gBAI/B,UAAC3F,EAAD,UACI6E,GAiCA,WAAC3E,EAAD,WACGmF,EAAUO,OAAS,GACI,OAAxBP,EAAU,GAAGQ,QACbZ,GACE,mCACE,UAAC3E,EAAD,CACE0C,IAEM+B,EAAQ,MAGd9B,IAAI,OACJ+B,MAAM,SAER,6BACE,UAAC7E,EAAD,wBACA,WAACE,EAAD,WACG,KACD,UAACE,EAAD,sBAFF,iDAMF0E,GACF,UAAC9E,EAAD,wBAEA,UAACA,EAAD,4BAEF,WAACD,EAAD,YACE,UAAC,GAAD,KACA,UAAC,GAAD,WA7DJ,WAACA,EAAD,WACa,UAAVU,GACC,UAACJ,EAAD,CAAKc,QAASiE,EAAd,SACGZ,GACC,UAAC,OAAD,CAAiBjD,KAAM,MAEvB,UAAC,OAAD,CAAiBA,KAAM,QAI3B,UAAClB,EAAD,CAAKc,QAASiE,EAAd,SACGZ,GACC,UAAC,OAAD,CAAiBjD,KAAM,GAAIC,MAAM,aAEjC,UAAC,OAAD,CAAiBD,KAAM,GAAIC,MAAM,eAIvC,WAAClB,EAAD,CACEa,QAhCiB,SAAAwE,GACrBA,EAAEC,OAAO3E,UAAU4E,SAAS,YAJJjF,GAASiD,EAAAA,GAAAA,MAKtC,EA+BStD,UAAW+E,EACXhE,UAAU,UAHZ,UAKG,IACAgE,IAAgB,UAAC,GAAD,IAAa,QAEhC,WAACvF,EAAD,YACE,UAAC,GAAD,KACA,UAAC,GAAD,WAuCX,EC/GY+F,GAAkBhG,EAAAA,GAAAA,IAAH,yYAqBfiG,GAAajG,EAAAA,GAAAA,KAAH,uUAED8B,EAAAA,ICUtB,GAzBmB,WACjB,IAAMoE,GAAOtF,EAAAA,EAAAA,IAAYwB,GAAAA,IACnB+D,GAAavF,EAAAA,EAAAA,IAAYwF,GAAAA,IAEzBtF,GAAWC,EAAAA,EAAAA,MACT6D,GAAcH,EAAAA,EAAAA,KAAdG,UACFY,GAAe5E,EAAAA,EAAAA,IAAY6E,GAAAA,IAQjC,OANAY,EAAAA,EAAAA,YAAU,YACHH,GAAQC,GACXrF,GAASwF,EAAAA,EAAAA,MAEZ,GAAE,CAACxF,EAAUoF,EAAMC,KAGlB,WAACH,GAAD,WACGpB,IAAcY,GAAe,UAAC,GAAD,IAAc,MAC5C,WAACS,GAAD,YACE,UAAC,GAAD,KACA,UAAC,KAAD,SAIP,C","sources":["components/Layout/Header/Header.styled.js","components/Layout/ThemeToggler/ThemeToggler.styled.js","components/Layout/ThemeToggler/ThemeToggler.jsx","components/Layout/UserInfo/UserInfo.styled.js","components/Layout/UserInfo/UserInfo.jsx","components/Layout/UserNav/UserNav.styled.js","components/Layout/UserNav/UserNav.jsx","components/Layout/LogoutBtn/LogoutBtn.styled.js","components/Layout/LogoutBtn/LogoutBtn.jsx","components/Layout/SideBar/SideBar.styled.js","components/Layout/SideBar/SideBar.jsx","components/Layout/Header/Header.jsx","components/Layout/MainLayout/MainLayout.styled.js","components/Layout/MainLayout/MainLayout.jsx"],"sourcesContent":["import { mainTextColor } from 'redux/Theme/Theme';\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-bottom: 64px;\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  position: relative;\n\n  &:not(:first-child) {\n    margin-left: auto;\n  }\n`;\n\nexport const H2 = styled.h2`\n  font-style: normal;\n  font-weight: 700;\n  font-size: 32px;\n  color: ${mainTextColor};\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n`;\n\nexport const Motivation = styled.span`\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  color: ${mainTextColor};\n`;\n\nexport const Image = styled.img`\n  width: 64px;\n  height: 60px;\n  margin-right: 10px;\n`;\n\nexport const Accent = styled.span`\n  color: var(--mainBlue);\n`;\n\nexport const Svg = styled.span`\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 34px;\n    height: 34px;\n  }\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const Overlay = styled.div`\n  width: 100%;\n  position: fixed;\n  top: 0px;\n  left: ${({ isVisible }) => (isVisible ? '0' : '-100%')};\n  height: 100vh;\n  background-color: rgba(47, 48, 58, 0.4);\n  z-index: 2;\n  overflow: hidden;\n  opacity: ${({ isVisible }) => (isVisible ? 1 : 0)};\n  visibility: ${({ isVisible }) => (isVisible ? 'visible' : 'hidden')};\n  transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out,\n    left 0.3s ease-in-out;\n`;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: none;\n  background-color: transparent;\n  width: 25px;\n  height: 25px;\n  margin-right: 14px;\n`;\n\nexport const Svg = styled.svg`\n  display: flex;\n  width: 25px;\n  height: 25px;\n  align-items: center;\n  fill: var(--mainBlue);\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectTheme } from 'redux/Theme/themeSelectors';\nimport { setTheme } from 'redux/Theme/themeSlice';\nimport { Button, Svg } from './ThemeToggler.styled';\nimport { CgSun } from 'react-icons/cg';\nimport { FiMoon } from 'react-icons/fi';\n\nconst ThemeToggler = () => {\n  const theme = useSelector(selectTheme);\n  const dispatch = useDispatch();\n  const body = document.getElementById('body');\n  body.classList.add(`${theme}-mode`);\n\n  const handleClick = () => {\n    dispatch(setTheme());\n    const currentClass = body.className;\n    body.className = currentClass === 'light-mode' ? 'dark-mode' : 'light-mode';\n  };\n\n  return (\n    <Button onClick={handleClick}>\n      <Svg>\n        {theme === 'light' ? (\n          <FiMoon size={25} color=\"#3e85f3\" />\n        ) : (\n          <CgSun size={25} color=\"#3e85f3\" />\n        )}\n      </Svg>\n    </Button>\n  );\n};\n\nexport default ThemeToggler;\n","import { NavLink } from 'react-router-dom';\nimport { mainBackgroundColor, secondTextColor } from 'redux/Theme/Theme';\nimport styled from 'styled-components';\n\nexport const Name = styled.span`\n  margin-right: 14px;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 18px;\n  color: ${secondTextColor};\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 32px;\n  height: 32px;\n  display: flex;\n  align-items: center;\n  border-radius: 50%;\n  border: 1.8px solid var(--mainBlue);\n  background-color: ${mainBackgroundColor};\n  justify-content: center;\n  @media screen and (min-width: 768px) {\n    width: 44px;\n    height: 44px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const AvatarLetter = styled.span`\n  display: flex;\n  align-items: center;\n  font-style: normal;\n  font-weight: 700;\n  font-size: 26px;\n  color: var(--mainBlue);\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n  @media screen and (min-width: 768px) {\n    font-weight: 700;\n    font-size: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n  }\n`;\n\nexport const AvatarImg = styled.img`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n`;\n","import { selectIsIsLoading, selectUser } from 'redux/Auth/authSelectors';\nimport { Avatar, AvatarImg, AvatarLetter, Name, Link } from './UserInfo.styled';\nimport { useSelector } from 'react-redux';\n\nconst UserInfo = () => {\n  const userInfo = useSelector(selectUser);\n  const isLoading = useSelector(selectIsIsLoading);\n\n  const name = userInfo?.name || 'Name';\n  const avatar = userInfo?.userImgUrl;\n  const firstLetter = name.trim().slice(0, 1).toUpperCase();\n\n  return (\n    <Link to=\"/main/account\">\n      <Name>{name}</Name>\n      <Avatar>\n        {isLoading ? (\n          <AvatarLetter>{firstLetter}</AvatarLetter>\n        ) : !avatar ? (\n          <AvatarLetter>{firstLetter}</AvatarLetter>\n        ) : (\n          <AvatarImg src={avatar} alt=\"Avatar\" />\n        )}\n      </Avatar>\n    </Link>\n  );\n};\n\nexport default UserInfo;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { addTaskBtnColor, elementTextColor, elementTextHoverColor} from 'redux/Theme/Theme';\n\nexport const UserNavContainer = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 14px;`\n;\n\nexport const LinkWrapper = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 18px;`\n;\n\nexport const NavLinkStyled = styled(NavLink)`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  padding: 10px 14px;\n  gap: 8px;\n  border-radius: 8px;\n  font-size: 14px;\n  line-height: 17px;\n  font-weight: 600;\n  color: ${elementTextColor};\n  transition: all ease-in-out 400ms;\n  &.active {\n    background-color: ${addTaskBtnColor};\n    color: ${elementTextHoverColor};\n    &:hover {\n      color: ${elementTextHoverColor};\n    }\n  }\n  :focus {\n    color: ${elementTextHoverColor};\n    background-color: ${addTaskBtnColor};\n  }\n\n  :hover {\n    color: var(--mainBlue);\n  }`\n;\n\nexport const IconWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 13px;`\n;\n\nexport const NavSecondaryTitle = styled.p`\n  font-size: 16px;\n  line-height: 19px;`\n;\n\nexport const NavTitle = styled.h2`\n  font-size: 14px;\n  line-height: 17px;\n  color: #7e7d82;\n  margin-bottom: 18px;`\n;","import React from 'react';\nimport {\n  IconWrapper,\n  LinkWrapper,\n  NavLinkStyled,\n  NavSecondaryTitle,\n  NavTitle,\n  UserNavContainer,\n} from './UserNav.styled';\nimport { BsCalendar, BsFillPersonCheckFill } from 'react-icons/bs';\nimport { closeSideBar } from 'redux/Modal/modalSlice';\nimport { useDispatch } from 'react-redux';\n\nconst date = new Date().toISOString().split('T')[0];\nconst UserNav = () => {\n  const dispatch = useDispatch();\n  const closeMobileMenu = () => dispatch(closeSideBar());\n  return (\n    <UserNavContainer>\n      <NavTitle>User panel</NavTitle>\n      <LinkWrapper>\n        <NavLinkStyled to=\"account\" onClick={closeMobileMenu}>\n          <IconWrapper>\n            <BsFillPersonCheckFill />\n            <NavSecondaryTitle>My account</NavSecondaryTitle>\n          </IconWrapper>\n        </NavLinkStyled>\n      </LinkWrapper>\n      <LinkWrapper>\n        <NavLinkStyled to={`/main/calendar/month/${date}`} onClick={closeMobileMenu}>\n          <IconWrapper>\n            <BsCalendar />\n            <NavSecondaryTitle>Calendar</NavSecondaryTitle>\n          </IconWrapper>\n        </NavLinkStyled>\n      </LinkWrapper>\n    </UserNavContainer>\n  );\n};\n\nexport default UserNav;\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  border: none;\n  border-radius: 16px;\n  font-family: 'Inter';\n  font-size: 14px;\n  line-height: 1.29;\n  font-weight: 600;\n  width: 121px;\n  height: 49px;\n  color: var(--mainWhite);\n  background-color: var(--mainBlue);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 4px 2px 16px rgba(136, 165, 191, 0.48);\n  &:hover {\n    background-color: #2b78ef;\n  }\n`;\nexport const IconLogOut = styled.span`\n  width: 18px;\n  height: 18px;\n  size: 18px;\n  padding-top: 1px;\n  margin-left: 7px;\n`;\n","import { FiLogOut } from 'react-icons/fi';\nimport { Button, IconLogOut } from './LogoutBtn.styled';\nimport { logoutThunk } from 'redux/Auth/authOperations';\nimport { useDispatch } from 'react-redux';\n\nconst ButtonLogOut = () => {\n  const dispatch = useDispatch();\n\n  const handleLogout = () => {\n    dispatch(logoutThunk());\n  };\n  return (\n    <Button onClick={handleLogout}>\n      Log out\n      <IconLogOut>\n        <FiLogOut />\n      </IconLogOut>\n    </Button>\n  );\n};\n\nexport default ButtonLogOut;\n","import { NavLink } from 'react-router-dom';\nimport { sideBackgroundColor } from 'redux/Theme/Theme';\nimport styled from 'styled-components';\n\nexport const StyledSideBar = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 225px;\n  min-height: 100vh;\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 24px;\n  background-color: ${sideBackgroundColor};\n  padding-bottom: 24px;\n  justify-content: space-between;\n\n  @media screen and (min-width: 768px) {\n    width: 289px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-top: 24px;\n    justify-content: space-between;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 289px;\n    padding-left: 24px;\n    padding-top: 32px;\n    border-right: solid 1px var(--elementsGrey);\n  }\n`;\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 64px;\n  gap: 20px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 50px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const StyledH2 = styled.h2`\n  text-align: center;\n  font-family: 'Coolvetica';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 22px;\n  color: var(--mainBlue);\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n    line-height: 24px;\n  }\n  @media screen and (min-width: 1440px) {\n    font-size: 24px;\n    line-height: 24px;\n  }\n`;\n\nexport const StyledImage = styled.img`\n  width: 36px;\n  height: 35px;\n  margin-right: 6px;\n  @media screen and (min-width: 768px) {\n    width: 60px;\n    height: 58px;\n    margin-right: 6px;\n  }\n  @media screen and (min-width: 1440px) {\n    width: 64px;\n    height: 60px;\n    margin-right: 10px;\n  }\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyledSpan = styled.span`\n  cursor: pointer;\n`;\n","import UserNav from '../UserNav/UserNav';\nimport ButtonLogOut from '../LogoutBtn/LogoutBtn';\nimport {\n  StyledH2,\n  StyledImage,\n  StyledNavLink,\n  StyledSideBar,\n  StyledSpan,\n  StyledWrapper,\n} from './SideBar.styled';\nimport { useMediaRules } from 'hooks/mediaRules';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeSideBar } from 'redux/Modal/modalSlice';\nimport { CgClose } from 'react-icons/cg';\nimport { selectTheme } from 'redux/Theme/themeSelectors';\n\nconst SideBar = () => {\n  const theme = useSelector(selectTheme);\n  const { isMobile, isTablet, isDesktop, isRetina } = useMediaRules();\n  const dispatch = useDispatch();\n  const closeMobileMenu = () => dispatch(closeSideBar());\n\n  return (\n    <StyledSideBar>\n      <div>\n        <StyledWrapper>\n          <StyledNavLink to=\"/\">\n            {isMobile && (\n              <StyledImage\n                src={\n                  isRetina\n                    ? require('./../../../images/logo/logo_mob@2x.png')\n                    : require('./../../../images/logo/logo_mob@1x.png')\n                }\n                alt=\"logo\"\n                width=\"122\"\n              />\n            )}\n            {isTablet && (\n              <StyledImage\n                src={\n                  isRetina\n                    ? require('./../../../images/logo/logo_tab@2x.png')\n                    : require('./../../../images/logo/logo_tab@1x.png')\n                }\n                alt=\"logo\"\n                width=\"156\"\n              />\n            )}{' '}\n            {isDesktop && (\n              <StyledImage\n                src={\n                  isRetina\n                    ? require('./../../../images/logo/logo_desk@2x.png')\n                    : require('./../../../images/logo/logo_desk@1x.png')\n                }\n                alt=\"logo\"\n                width=\"201\"\n              />\n            )}\n            <StyledH2>\n              G<i>oo</i>seTrack\n            </StyledH2>\n          </StyledNavLink>\n          {!isDesktop &&\n            (theme === 'light' ? (\n              <StyledSpan onClick={closeMobileMenu}>\n                {isMobile ? <CgClose size={24} /> : <CgClose size={33} />}\n              </StyledSpan>\n            ) : (\n              <StyledSpan onClick={closeMobileMenu}>\n                {isMobile ? (\n                  <CgClose size={24} color=\"#ffffff\" />\n                ) : (\n                  <CgClose size={33} color=\"#ffffff\" />\n                )}\n              </StyledSpan>\n            ))}\n        </StyledWrapper>\n        <UserNav />\n      </div>\n      <ButtonLogOut />\n    </StyledSideBar>\n  );\n};\nexport default SideBar;\n","import { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useMediaRules } from 'hooks/mediaRules';\nimport {\n  Container,\n  Image,\n  H2,\n  Wrapper,\n  Motivation,\n  Accent,\n  Overlay,\n  Svg,\n} from './Header.styled';\nimport { selectAllTasks } from 'redux/Tasks/tasksSelectors';\nimport ThemeToggler from '../ThemeToggler/ThemeToggler';\nimport UserInfo from '../UserInfo/UserInfo';\nimport SideBar from '../SideBar/SideBar';\nimport { selectSideBar } from 'redux/Modal/modalSelectors';\nimport { closeSideBar, openSideBar } from 'redux/Modal/modalSlice';\nimport { RxHamburgerMenu } from 'react-icons/rx';\nimport { selectTheme } from 'redux/Theme/themeSelectors';\n\nconst Header = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const isActivePageCalendar = location.pathname.includes('calendar');\n  const tasksList = useSelector(selectAllTasks);\n  const theme = useSelector(selectTheme);\n  const { isMobile, isDesktop, isRetina } = useMediaRules();\n\n  const openMobileMenu = () => dispatch(openSideBar());\n  const closeMobileMenu = () => dispatch(closeSideBar());\n  const sideBarState = useSelector(selectSideBar);\n\n  const handleOverlayClick = e => {\n    if (e.target.classList.contains('overlay')) closeMobileMenu();\n  };\n\n  if (sideBarState) {\n    document.body.classList.add('lock-scroll');\n  } else {\n    document.body.classList.remove('lock-scroll');\n  }\n\n  return (\n    <Container>\n      {!isDesktop ? (\n        <Wrapper>\n          {theme === 'light' ? (\n            <Svg onClick={openMobileMenu}>\n              {isMobile ? (\n                <RxHamburgerMenu size={24} />\n              ) : (\n                <RxHamburgerMenu size={34} />\n              )}\n            </Svg>\n          ) : (\n            <Svg onClick={openMobileMenu}>\n              {isMobile ? (\n                <RxHamburgerMenu size={24} color=\"#ffffff\" />\n              ) : (\n                <RxHamburgerMenu size={34} color=\"#ffffff\" />\n              )}\n            </Svg>\n          )}\n          <Overlay\n            onClick={handleOverlayClick}\n            isVisible={sideBarState}\n            className=\"overlay\"\n          >\n            {' '}\n            {sideBarState && <SideBar />}{' '}\n          </Overlay>\n          <Wrapper>\n            <ThemeToggler />\n            <UserInfo />\n          </Wrapper>\n        </Wrapper>\n      ) : (\n        <Wrapper>\n          {tasksList.length > 0 &&\n          tasksList[0].taskId !== null &&\n          isActivePageCalendar ? (\n            <>\n              <Image\n                src={\n                  isRetina\n                    ? require('../../../images/header/header_desk@2x.png')\n                    : require('../../../images/header/header_desk@2x.png')\n                }\n                alt=\"logo\"\n                width=\"122\"\n              />\n              <div>\n                <H2>Calendar</H2>\n                <Motivation>\n                  {' '}\n                  <Accent>Let go </Accent>of the past and focus on the present!\n                </Motivation>\n              </div>\n            </>\n          ) : isActivePageCalendar ? (\n            <H2>Calendar</H2>\n          ) : (\n            <H2>User Profile</H2>\n          )}\n          <Wrapper>\n            <ThemeToggler />\n            <UserInfo />\n          </Wrapper>\n        </Wrapper>\n      )}\n    </Container>\n  );\n};\n\nexport default Header;\n","import { mainBackgroundColor } from 'redux/Theme/Theme';\nimport styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  margin: 0 auto;\n  background-color: var(mainBackgroundColor);\n\n  @media screen and (min-width: 480px) {\n    min-width: 375px;\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n  }\n`;\n\nexport const StyledMain = styled.main`\n  padding: 24px 20px;\n  background-color: ${mainBackgroundColor};\n  flex-grow: 1;\n  max-width: 375px;\n  position: relative;\n\n  @media screen and (min-width: 768px) {\n    padding: 24px 32px;\n    max-width: 768px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 40px 32px;\n    max-width: 1151px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Outlet } from 'react-router-dom';\nimport { getUserInfoThunk } from 'redux/Auth/authOperations';\nimport { useEffect } from 'react';\nimport Header from '../Header/Header';\nimport SideBar from '../SideBar/SideBar';\nimport { StyledContainer, StyledMain } from './MainLayout.styled';\nimport { selectIsLoggedIn, selectUser } from 'redux/Auth/authSelectors';\nimport { useMediaRules } from 'hooks/mediaRules';\nimport { selectSideBar } from 'redux/Modal/modalSelectors';\n\nconst MainLayout = () => {\n  const user = useSelector(selectUser);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const dispatch = useDispatch();\n  const { isDesktop } = useMediaRules();\n  const sideBarState = useSelector(selectSideBar);\n\n  useEffect(() => {\n    if (!user && isLoggedIn) {\n      dispatch(getUserInfoThunk());\n    }\n  }, [dispatch, user, isLoggedIn]);\n\n  return (\n    <StyledContainer>\n      {isDesktop && !sideBarState ? <SideBar /> : null}\n      <StyledMain>\n        <Header />\n        <Outlet />\n      </StyledMain>\n    </StyledContainer>\n  );\n};\n\nexport default MainLayout;\n"],"names":["Container","styled","Wrapper","H2","mainTextColor","Motivation","Image","Accent","Svg","Overlay","isVisible","Button","theme","useSelector","selectTheme","dispatch","useDispatch","body","document","getElementById","classList","add","onClick","setTheme","currentClass","className","size","color","Name","secondTextColor","Avatar","mainBackgroundColor","AvatarLetter","AvatarImg","Link","NavLink","userInfo","selectUser","isLoading","selectIsIsLoading","name","avatar","userImgUrl","firstLetter","trim","slice","toUpperCase","to","src","alt","UserNavContainer","LinkWrapper","NavLinkStyled","elementTextColor","addTaskBtnColor","elementTextHoverColor","IconWrapper","NavSecondaryTitle","NavTitle","date","Date","toISOString","split","closeMobileMenu","closeSideBar","IconLogOut","logoutThunk","StyledSideBar","sideBackgroundColor","StyledWrapper","StyledH2","StyledImage","StyledNavLink","StyledSpan","useMediaRules","isMobile","isTablet","isDesktop","isRetina","require","width","isActivePageCalendar","useLocation","pathname","includes","tasksList","selectAllTasks","openMobileMenu","openSideBar","sideBarState","selectSideBar","remove","length","taskId","e","target","contains","StyledContainer","StyledMain","user","isLoggedIn","selectIsLoggedIn","useEffect","getUserInfoThunk"],"sourceRoot":""}